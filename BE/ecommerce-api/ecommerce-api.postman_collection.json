{
  "info": {
    "name": "E-commerce API",
    "description": "Complete API collection for the E-commerce application",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "ecommerce-api-collection",
    "version": "1.0.0"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "1",
      "type": "string"
    },
    {
      "key": "productId",
      "value": "prod_123",
      "type": "string"
    },
    {
      "key": "orderId",
      "value": "1",
      "type": "string"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"password123\",\n  \"phone\": \"1234567890\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            },
            "description": "Register a new user account"
          },
          "response": []
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.token) {",
                  "        pm.collectionVariables.set('authToken', response.token);",
                  "        pm.collectionVariables.set('userId', response.user.id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            },
            "description": "Login to get JWT authentication token"
          },
          "response": []
        },
        {
          "name": "Check Email Exists",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/check-email/john.doe@example.com",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "check-email", "john.doe@example.com"]
            },
            "description": "Check if email address is already registered"
          },
          "response": []
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "logout"]
            },
            "description": "Logout user"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Products",
      "item": [
        {
          "name": "Get All Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products?page=0&size=10&sortBy=name&sortDir=asc&category=Electronics",
              "host": ["{{baseUrl}}"],
              "path": ["products"],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                },
                {
                  "key": "sortBy",
                  "value": "name"
                },
                {
                  "key": "sortDir",
                  "value": "asc"
                },
                {
                  "key": "category",
                  "value": "Electronics",
                  "disabled": true
                },
                {
                  "key": "subCategory",
                  "value": "Headphones",
                  "disabled": true
                },
                {
                  "key": "brand",
                  "value": "AudioTech",
                  "disabled": true
                },
                {
                  "key": "minPrice",
                  "value": "50",
                  "disabled": true
                },
                {
                  "key": "maxPrice",
                  "value": "500",
                  "disabled": true
                }
              ]
            },
            "description": "Get all products with enhanced filtering options"
          },
          "response": []
        },
        {
          "name": "Get Product by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products/{{productId}}",
              "host": ["{{baseUrl}}"],
              "path": ["products", "{{productId}}"]
            },
            "description": "Get a specific product by ID"
          },
          "response": []
        },
        {
          "name": "Get Product by SKU",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products/sku/PROD-ABC-123",
              "host": ["{{baseUrl}}"],
              "path": ["products", "sku", "PROD-ABC-123"]
            },
            "description": "Get a specific product by SKU"
          },
          "response": []
        },
        {
          "name": "Create Product (Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sku\": \"PROD-ABC-123\",\n  \"name\": \"Premium Wireless Headphones\",\n  \"description\": \"Immersive sound, comfortable design, and long-lasting battery life for an unparalleled audio experience.\",\n  \"category\": \"Electronics\",\n  \"subCategory\": \"Headphones\",\n  \"brand\": \"AudioTech\",\n  \"price\": 199.99,\n  \"currency\": \"USD\",\n  \"stockQuantity\": 50,\n  \"images\": [\n    \"https://example.com/images/headphones_main.jpg\",\n    \"https://example.com/images/headphones_side.jpg\",\n    \"https://example.com/images/headphones_back.jpg\"\n  ],\n  \"specifications\": {\n    \"connectivity\": \"Bluetooth 5.0\",\n    \"batteryLifeHours\": 20,\n    \"noiseCancellation\": true,\n    \"colorOptions\": [\"Black\", \"Silver\", \"Blue\"]\n  },\n  \"variations\": [\n    {\n      \"sku\": \"PROD-ABC-123-BLK\",\n      \"color\": \"Black\",\n      \"price\": 199.99,\n      \"stockQuantity\": 25\n    },\n    {\n      \"sku\": \"PROD-ABC-123-SLV\",\n      \"color\": \"Silver\",\n      \"price\": 199.99,\n      \"stockQuantity\": 15\n    },\n    {\n      \"sku\": \"PROD-ABC-123-BLU\",\n      \"color\": \"Blue\",\n      \"price\": 209.99,\n      \"stockQuantity\": 10\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/products",
              "host": ["{{baseUrl}}"],
              "path": ["products"]
            },
            "description": "Create a new product with enhanced schema (Admin only)"
          },
          "response": []
        },
        {
          "name": "Update Product (Admin)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sku\": \"PROD-ABC-123-UPD\",\n  \"name\": \"Updated Premium Wireless Headphones\",\n  \"description\": \"Updated immersive sound, comfortable design, and long-lasting battery life\",\n  \"category\": \"Electronics\",\n  \"subCategory\": \"Headphones\",\n  \"brand\": \"AudioTech\",\n  \"price\": 179.99,\n  \"currency\": \"USD\",\n  \"stockQuantity\": 45,\n  \"images\": [\n    \"https://example.com/images/updated-headphones.jpg\"\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/products/{{productId}}",
              "host": ["{{baseUrl}}"],
              "path": ["products", "{{productId}}"]
            },
            "description": "Update an existing product (Admin only)"
          },
          "response": []
        },
        {
          "name": "Delete Product (Admin)",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products/{{productId}}",
              "host": ["{{baseUrl}}"],
              "path": ["products", "{{productId}}"]
            },
            "description": "Soft delete a product (Admin only)"
          },
          "response": []
        },
        {
          "name": "Get Products by Category",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products/category/Electronics",
              "host": ["{{baseUrl}}"],
              "path": ["products", "category", "Electronics"]
            },
            "description": "Get all products in a specific category"
          },
          "response": []
        },
        {
          "name": "Get Products by Subcategory",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products/category/Electronics/subcategory/Headphones",
              "host": ["{{baseUrl}}"],
              "path": ["products", "category", "Electronics", "subcategory", "Headphones"]
            },
            "description": "Get all products in a specific subcategory"
          },
          "response": []
        },
        {
          "name": "Get Products by Brand",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products/brand/AudioTech",
              "host": ["{{baseUrl}}"],
              "path": ["products", "brand", "AudioTech"]
            },
            "description": "Get all products from a specific brand"
          },
          "response": []
        },
        {
          "name": "Search Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products/search?query=wireless headphones&page=0&size=10",
              "host": ["{{baseUrl}}"],
              "path": ["products", "search"],
              "query": [
                {
                  "key": "query",
                  "value": "wireless headphones"
                },
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                }
              ]
            },
            "description": "Search products by name, description, brand, or category"
          },
          "response": []
        },
        {
          "name": "Get Products by Price Range",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products/price-range?minPrice=50&maxPrice=500",
              "host": ["{{baseUrl}}"],
              "path": ["products", "price-range"],
              "query": [
                {
                  "key": "minPrice",
                  "value": "50"
                },
                {
                  "key": "maxPrice",
                  "value": "500"
                }
              ]
            },
            "description": "Get products within a price range"
          },
          "response": []
        },
        {
          "name": "Get All Categories",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products/categories",
              "host": ["{{baseUrl}}"],
              "path": ["products", "categories"]
            },
            "description": "Get all distinct product categories"
          },
          "response": []
        },
        {
          "name": "Get Subcategories by Category",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products/categories/Electronics/subcategories",
              "host": ["{{baseUrl}}"],
              "path": ["products", "categories", "Electronics", "subcategories"]
            },
            "description": "Get all subcategories for a specific category"
          },
          "response": []
        },
        {
          "name": "Get All Brands",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products/brands",
              "host": ["{{baseUrl}}"],
              "path": ["products", "brands"]
            },
            "description": "Get all distinct product brands"
          },
          "response": []
        },
        {
          "name": "Add Product Review",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"productId\": \"{{productId}}\",\n  \"userId\": \"{{userId}}\",\n  \"rating\": 5,\n  \"comment\": \"Amazing sound quality! Best headphones I've ever owned.\",\n  \"isVerifiedPurchase\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/products/{{productId}}/reviews",
              "host": ["{{baseUrl}}"],
              "path": ["products", "{{productId}}", "reviews"]
            },
            "description": "Add a review for a product"
          },
          "response": []
        },
        {
          "name": "Get Product Reviews",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products/{{productId}}/reviews?page=0&size=10&sortBy=date&sortDir=desc",
              "host": ["{{baseUrl}}"],
              "path": ["products", "{{productId}}", "reviews"],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                },
                {
                  "key": "sortBy",
                  "value": "date"
                },
                {
                  "key": "sortDir",
                  "value": "desc"
                }
              ]
            },
            "description": "Get all reviews for a product"
          },
          "response": []
        },
        {
          "name": "Get Product Rating Summary",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products/{{productId}}/rating-summary",
              "host": ["{{baseUrl}}"],
              "path": ["products", "{{productId}}", "rating-summary"]
            },
            "description": "Get rating statistics for a product"
          },
          "response": []
        },
        {
          "name": "Update Product Stock (Admin)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"stockQuantity\": 75\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/products/{{productId}}/stock",
              "host": ["{{baseUrl}}"],
              "path": ["products", "{{productId}}", "stock"]
            },
            "description": "Update product stock quantity (Admin only)"
          },
          "response": []
        },
        {
          "name": "Update Variation Stock (Admin)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"stockQuantity\": 30\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/products/{{productId}}/variations/PROD-ABC-123-BLK/stock",
              "host": ["{{baseUrl}}"],
              "path": ["products", "{{productId}}", "variations", "PROD-ABC-123-BLK", "stock"]
            },
            "description": "Update variation stock quantity (Admin only)"
          },
          "response": []
        },
        {
          "name": "Get Featured Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products/featured?limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["products", "featured"],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get featured products"
          },
          "response": []
        },
        {
          "name": "Get Low Stock Products (Admin)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products/low-stock?threshold=10",
              "host": ["{{baseUrl}}"],
              "path": ["products", "low-stock"],
              "query": [
                {
                  "key": "threshold",
                  "value": "10"
                }
              ]
            },
            "description": "Get products with low stock (Admin only)"
          },
          "response": []
        },
        {
          "name": "Get Top Rated Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products/top-rated?limit=10&minRating=4.0",
              "host": ["{{baseUrl}}"],
              "path": ["products", "top-rated"],
              "query": [
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "minRating",
                  "value": "4.0"
                }
              ]
            },
            "description": "Get top-rated products"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Cart",
      "item": [
        {
          "name": "Get User Cart",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/cart/user/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["cart", "user", "{{userId}}"]
            },
            "description": "Get all items in user's cart"
          },
          "response": []
        },
        {
          "name": "Add Item to Cart",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": {{userId}},\n  \"productId\": \"{{productId}}\",\n  \"quantity\": 2\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/cart/add",
              "host": ["{{baseUrl}}"],
              "path": ["cart", "add"]
            },
            "description": "Add a product to the cart"
          },
          "response": []
        },
        {
          "name": "Update Cart Item Quantity",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": {{userId}},\n  \"quantity\": 3\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/cart/1",
              "host": ["{{baseUrl}}"],
              "path": ["cart", "1"]
            },
            "description": "Update quantity of a cart item"
          },
          "response": []
        },
        {
          "name": "Remove Item from Cart",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": {{userId}}\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/cart/1",
              "host": ["{{baseUrl}}"],
              "path": ["cart", "1"]
            },
            "description": "Remove an item from the cart"
          },
          "response": []
        },
        {
          "name": "Clear Cart",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/cart/user/{{userId}}/clear",
              "host": ["{{baseUrl}}"],
              "path": ["cart", "user", "{{userId}}", "clear"]
            },
            "description": "Clear all items from user's cart"
          },
          "response": []
        },
        {
          "name": "Get Cart Item Count",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/cart/user/{{userId}}/count",
              "host": ["{{baseUrl}}"],
              "path": ["cart", "user", "{{userId}}", "count"]
            },
            "description": "Get total number of items in cart"
          },
          "response": []
        },
        {
          "name": "Get Cart Total",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/cart/user/{{userId}}/total",
              "host": ["{{baseUrl}}"],
              "path": ["cart", "user", "{{userId}}", "total"]
            },
            "description": "Get total amount of cart"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Orders",
      "item": [
        {
          "name": "Get All Orders (Admin)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/orders?page=0&size=10&sortBy=createdAt&sortDir=desc",
              "host": ["{{baseUrl}}"],
              "path": ["orders"],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                },
                {
                  "key": "sortBy",
                  "value": "createdAt"
                },
                {
                  "key": "sortDir",
                  "value": "desc"
                }
              ]
            },
            "description": "Get all orders with pagination (Admin only)"
          },
          "response": []
        },
        {
          "name": "Create Order",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": {{userId}},\n  \"shippingAddress\": \"123 Main St, City, State 12345\",\n  \"paymentMethod\": \"credit_card\",\n  \"notes\": \"Please handle with care\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/orders",
              "host": ["{{baseUrl}}"],
              "path": ["orders"]
            },
            "description": "Create a new order from cart items"
          },
          "response": []
        },
        {
          "name": "Get Order by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/orders/{{orderId}}",
              "host": ["{{baseUrl}}"],
              "path": ["orders", "{{orderId}}"]
            },
            "description": "Get a specific order by ID"
          },
          "response": []
        },
        {
          "name": "Update Order Status (Admin)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"SHIPPED\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/orders/{{orderId}}/status",
              "host": ["{{baseUrl}}"],
              "path": ["orders", "{{orderId}}", "status"]
            },
            "description": "Update order status (Admin only)"
          },
          "response": []
        },
        {
          "name": "Get User Orders",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/orders/user/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["orders", "user", "{{userId}}"]
            },
            "description": "Get all orders for a specific user"
          },
          "response": []
        },
        {
          "name": "Get Orders by Status (Admin)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/orders/status/PENDING",
              "host": ["{{baseUrl}}"],
              "path": ["orders", "status", "PENDING"]
            },
            "description": "Get orders by status (Admin only)"
          },
          "response": []
        },
        {
          "name": "Cancel Order",
          "request": {
            "method": "PUT",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/orders/{{orderId}}/cancel",
              "host": ["{{baseUrl}}"],
              "path": ["orders", "{{orderId}}", "cancel"]
            },
            "description": "Cancel an order"
          },
          "response": []
        },
        {
          "name": "Delete Order (Admin)",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/orders/{{orderId}}",
              "host": ["{{baseUrl}}"],
              "path": ["orders", "{{orderId}}"]
            },
            "description": "Delete an order (Admin only)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Get All Users (Admin)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users?page=0&size=10&sortBy=id&sortDir=asc",
              "host": ["{{baseUrl}}"],
              "path": ["users"],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                },
                {
                  "key": "sortBy",
                  "value": "id"
                },
                {
                  "key": "sortDir",
                  "value": "asc"
                }
              ]
            },
            "description": "Get all users with pagination (Admin only)"
          },
          "response": []
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}"]
            },
            "description": "Get a specific user by ID"
          },
          "response": []
        },
        {
          "name": "Create User (Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Jane\",\n  \"lastName\": \"Smith\",\n  \"email\": \"jane.smith@example.com\",\n  \"password\": \"securepassword\",\n  \"phone\": \"0987654321\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            },
            "description": "Create a new user (Admin only)"
          },
          "response": []
        },
        {
          "name": "Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"John Updated\",\n  \"lastName\": \"Doe Updated\",\n  \"email\": \"john.doe.updated@example.com\",\n  \"password\": \"newpassword123\",\n  \"phone\": \"1111111111\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}"]
            },
            "description": "Update user information"
          },
          "response": []
        },
        {
          "name": "Delete User (Admin)",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}"]
            },
            "description": "Soft delete a user (Admin only)"
          },
          "response": []
        },
        {
          "name": "Get User by Email",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/email/john.doe@example.com",
              "host": ["{{baseUrl}}"],
              "path": ["users", "email", "john.doe@example.com"]
            },
            "description": "Get user by email address"
          },
          "response": []
        },
        {
          "name": "Get Users by Role (Admin)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/role/USER",
              "host": ["{{baseUrl}}"],
              "path": ["users", "role", "USER"]
            },
            "description": "Get users by role (Admin only)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "System",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/test",
              "host": ["{{baseUrl}}"],
              "path": ["test"]
            },
            "description": "Test API health and connectivity"
          },
          "response": []
        }
      ]
    }
  ]
}
